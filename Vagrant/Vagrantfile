Vagrant.configure("2") do |config|

#1 Machine avec docker
  config.vm.define "docker" do |a|

    #version normal :
    a.vm.box = "almalinux/8"
    a.vm.hostname = "docker"
    a.vm.network "forwarded_port", guest: 5000, host: 5000, id: 'x'
    a.vm.network "private_network", ip: "192.168.50.100"

    a.vm.provision "shell" do |s|
      s.inline = <<-SHELL
      sudo dnf update -y
      sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
      sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin --allowerasing 
      sudo systemctl start docker
      sudo systemctl enable docker
      sudo systemctl status docker
      SHELL
      a.vm.provision:shell, path: "scripts/config_docker.sh"
    end

    a.vm.provider "virtualbox" do |vb|
      vb.name = "srv-docker"
      vb.memory = "2048"
      vb.cpus = 2
    end 
  end

#fin1




#2 Machine avec ansiblee
config.vm.define "ansible" do |b|

  #version normal :
  b.vm.box = "almalinux/8"
  b.vm.hostname = "ansible"
  b.vm.network "forwarded_port", guest: 5001, host: 5001, id: 'x'
  b.vm.network "private_network", ip: "192.168.50.101"

  b.vm.provision "shell" do |s|
    s.inline = <<-SHELL
    echo "ici j'ai configuré directement avec le script config_ansible"
    SHELL

# juste avant on a provisionné notre machine avec le shell, on peut aussi faire appel a un script
    b.vm.provision:shell, path: "scripts/config_ansible.sh"
    b.vm.provision:shell, path: "scripts/autossh.sh"
    b.vm.provision:shell, path: "scripts/sshcopyid.sh"
  end

  b.vm.provider "virtualbox" do |vb|
    vb.name = "srv-ansible"
    vb.memory = "2048"
    vb.cpus = 2
  end 
end

#fin2


####################################NE PAS TOUCHER CE FIN
end
